# Generated by Django 5.2.7 on 2025-10-19 17:39

import django.db.models.deletion
import link.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TelegramLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title or name of the Telegram link', max_length=200)),
                ('url', models.URLField(max_length=500, validators=[link.models.validate_telegram_url])),
                ('description', models.TextField(blank=True, help_text='Brief description of the link')),
                ('link_type', models.CharField(choices=[('channel', 'Channel'), ('group', 'Group'), ('bot', 'Bot'), ('user', 'User'), ('other', 'Other')], default='other', max_length=20)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Verified by admin')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='links', to='link.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telegram_links', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LinkLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='link.telegramlink')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='link.telegramlink')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='telegramlink',
            index=models.Index(fields=['-created_at'], name='link_telegr_created_984bee_idx'),
        ),
        migrations.AddIndex(
            model_name='telegramlink',
            index=models.Index(fields=['link_type'], name='link_telegr_link_ty_6ff52d_idx'),
        ),
        migrations.AddIndex(
            model_name='telegramlink',
            index=models.Index(fields=['is_active'], name='link_telegr_is_acti_0ba7da_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='linklike',
            unique_together={('user', 'link')},
        ),
    ]
